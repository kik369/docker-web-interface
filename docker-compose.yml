services:
    backend:
        build: ./backend
        ports:
            - '5000:5000'
        environment:
            - FLASK_ENV=${FLASK_ENV}
            - FLASK_APP=${FLASK_APP}
            - LOG_LEVEL=${LOG_LEVEL}
            - LOG_FORMAT=${LOG_FORMAT}
            - PYTHONPATH=${PYTHONPATH}
        volumes:
            - ./backend:/app
            - /var/run/docker.sock:/var/run/docker.sock
        user: root
        command: gunicorn -b 0.0.0.0:5000 docker_monitor:app
        container_name: docker_web_backend
        develop:
            watch:
                - action: sync
                  path: ./backend
                  target: /app
                  ignore:
                      - '__pycache__/'
                      - '*.pyc'
                - action: rebuild
                  path: ./backend/requirements.txt
        depends_on:
            - prometheus

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        ports:
            - '3002:3000'
        volumes:
            - ./frontend:/app
            - /app/node_modules
        environment:
            - REACT_APP_API_URL=${REACT_APP_API_URL}
            - REACT_APP_LOG_LEVEL=${REACT_APP_LOG_LEVEL}
            - REACT_APP_SEND_LOGS_TO_BACKEND=${REACT_APP_SEND_LOGS_TO_BACKEND}
            - WATCHPACK_POLLING=true
        container_name: docker_web_frontend
        develop:
            watch:
                - action: sync
                  path: ./frontend/src
                  target: /app/src
                  ignore:
                      - node_modules/
                - action: sync
                  path: ./frontend/public
                  target: /app/public
                - action: rebuild
                  path: ./frontend/package.json
        depends_on:
            - backend

    prometheus:
        image: prom/prometheus:latest
        ports:
            - '9090:9090'
        volumes:
            - ./prometheus:/etc/prometheus
            - prometheus_data:/prometheus
        command:
            - '--config.file=${PROMETHEUS_CONFIG_FILE}'
            - '--storage.tsdb.path=${PROMETHEUS_STORAGE_PATH}'
            - '--web.console.libraries=${PROMETHEUS_CONSOLE_LIBRARIES}'
            - '--web.console.templates=${PROMETHEUS_CONSOLE_TEMPLATES}'
        container_name: docker_web_prometheus

    grafana:
        image: grafana/grafana:latest
        ports:
            - '3001:3000'
        volumes:
            - grafana_data:/var/lib/grafana
            - ./grafana/provisioning:/etc/grafana/provisioning
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
            - GF_USERS_ALLOW_SIGN_UP=${GF_USERS_ALLOW_SIGN_UP}
        container_name: docker_web_grafana
        depends_on:
            - prometheus

volumes:
    prometheus_data:
    grafana_data:
